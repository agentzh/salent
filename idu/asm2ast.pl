#: asm2ast.pl
#: Convert NASM code generated by bin2asm.pl to Perl AST
#:   used with optest.tt
#: Salent v0.12
#: Copyright (c) 2005 Agent Zhang
#: 2005-07-29 2005-07-31

use strict;
use warnings;

use inc::Ndisasm;
use Template::Ast;
use Getopt::Std;

my %opts;
getopts('hd', \%opts);
if ($opts{h}) {
    print <<"_EOC_";
Usage:
    asm2ast [-d] input1.asm input2.asm > output.ast
  OR
    asm2ast [-d] < input.asm > output.ast

Options:
    -d       Fix the absolute displacement problem
             (slow and default off)
_EOC_
    exit(0);
}

my $fix = $opts{d};
my @items;
while (<>) {
    if (/^\s*(.*\S)\s+;(\s*.*\S)\s*$/) {
        my ($asm, $mac) = ($1, $2);
        if ($fix and $asm =~ /call\b|\bj\w+|\bloop/io) {
            $asm = disasm($mac);
            die inc::Ndisasm->error() unless defined $asm;
        }
        push @items, {
            asm => $asm,
            mac => $mac,
        };
    }
}
warn "asm2ast: ", scalar(@items), " instructions parsed.\n";

my $ast = { ops => \@items };
Template::Ast->write($ast, '-') or
    die Template::Ast->error();
